<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>halia on Lei Xia</title><link>https://www.ddhigh.com/tags/halia/</link><description>Recent content in halia on Lei Xia</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 12 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.ddhigh.com/tags/halia/atom.xml" rel="self" type="application/rss+xml"/><item><title>Golang组件化网络服务器框架Halia指南</title><link>https://www.ddhigh.com/2021/01/12/golang-halia-get-started/</link><pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.ddhigh.com/2021/01/12/golang-halia-get-started/</guid><description>&lt;h2 id="写在前面">写在前面&lt;/h2>
&lt;p>在&lt;strong>netty&lt;/strong>框架面世之前，几乎没有一个成熟的OOP/组件化规范指导网络服务器开发，一些常用的&lt;code>FrameDecoder&lt;/code>,&lt;code>BusinessHandler&lt;/code>等等组件紧密耦合在了项目当中，整个项目可以说扩展性比较差。&lt;/p>
&lt;p>netty的出现可以说是划时代的，基于OOP/组件化屏蔽了底层 &lt;strong>BlockingIO&lt;/strong>/&lt;strong>NonBlockingIO&lt;/strong>/&lt;strong>AsynchrousIO&lt;/strong>之间的差异，各种组件可以无缝切换，网络服务器开发效率有了非常大的提高。&lt;/p>
&lt;p>通过阅读netty源码，以及核心组件的架构，基于Golang进行了实现，至此，Golang的Halia框架面世了！&lt;/p>
&lt;h2 id="halia特性">Halia特性&lt;/h2>
&lt;h3 id="组件化可扩展">组件化/可扩展&lt;/h3>
&lt;p>Halia框架面向接口编程，并提供默认实现，同时内置常用的解码器，真正做到开箱即用。&lt;/p>
&lt;h3 id="高性能">高性能&lt;/h3>
&lt;p>基于Golang原生网络库进行开发，无第三方依赖，性能有保障。&lt;/p>
&lt;h3 id="易用性">易用性&lt;/h3>
&lt;p>Halia框架采用极简设计，没有冗余代码，并附带3个常用解码器示例，助您基于Halia快速开始开发。&lt;/p>
&lt;h3 id="开源免费">开源免费&lt;/h3>
&lt;p>Halia框架基于MIT开源协议发布，无论是商用以及非商用都可以免费使用。&lt;/p>
&lt;h3 id="社区驱动">社区驱动&lt;/h3>
&lt;p>Halia框架托管于Github，任何人都可以贡献一臂之力。&lt;/p>
&lt;h2 id="快速开始">快速开始&lt;/h2>
&lt;p>接下来将演示如何开发一个时间回显服务器。&lt;/p>
&lt;p>客户端每隔1秒发送时间字符串给服务器，服务器回显该数据。&lt;/p>
&lt;h3 id="公用代码">公用代码&lt;/h3>
&lt;h4 id="encodergo">encoder.go&lt;/h4>
&lt;p>字符串编码器，将字符串转换为&lt;code>[]byte&lt;/code>传输到下一个出站处理器&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;halia/channel&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">StringToByteEncoder&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span>{}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 编码器不处理处理，交由下一个处理器(也就是业务处理器)处理
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">e&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StringToByteEncoder&lt;/span>) &lt;span style="color:#a6e22e">OnError&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">FireOnError&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">e&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StringToByteEncoder&lt;/span>) &lt;span style="color:#a6e22e">Write&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>, &lt;span style="color:#a6e22e">msg&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span>{}) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">str&lt;/span>, &lt;span style="color:#a6e22e">ok&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">msg&lt;/span>.(&lt;span style="color:#66d9ef">string&lt;/span>); &lt;span style="color:#a6e22e">ok&lt;/span> { &lt;span style="color:#75715e">// string才转换
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Write&lt;/span>([]byte(&lt;span style="color:#a6e22e">str&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Write&lt;/span>(&lt;span style="color:#a6e22e">msg&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">e&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">StringToByteEncoder&lt;/span>) &lt;span style="color:#a6e22e">Flush&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>) &lt;span style="color:#66d9ef">error&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Flush&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="客户端代码">客户端代码&lt;/h3>
&lt;h4 id="handlergo">handler.go&lt;/h4>
&lt;p>客户端业务处理代码。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fmt&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span> &lt;span style="color:#e6db74">&amp;#34;github.com/sirupsen/logrus&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;halia/channel&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;strings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;time&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">EchoClientHandler&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Entry&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">NewEchoClientHandler&lt;/span>() &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">EchoClientHandler&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">EchoClientHandler&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>: &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;component&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;EchoClientHandler&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 发送错误回调
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">EchoClientHandler&lt;/span>) &lt;span style="color:#a6e22e">OnError&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">Warnln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;error caught&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 连接已建立
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">EchoClientHandler&lt;/span>) &lt;span style="color:#a6e22e">ChannelActive&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">Infoln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;connected&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">WriteAndFlush&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Hello World\r\n&amp;#34;&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithError&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>).&lt;span style="color:#a6e22e">Warnln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;write error&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Infof&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;pipeline in: %v&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">strings&lt;/span>.&lt;span style="color:#a6e22e">Join&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">InboundNames&lt;/span>(), &lt;span style="color:#e6db74">&amp;#34;-&amp;gt;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Infof&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;pipeline out: %v&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">strings&lt;/span>.&lt;span style="color:#a6e22e">Join&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">OutboundNames&lt;/span>(), &lt;span style="color:#e6db74">&amp;#34;-&amp;gt;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 连接已断开
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">EchoClientHandler&lt;/span>) &lt;span style="color:#a6e22e">ChannelInActive&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">Infoln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;disconnected&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// 读取到完整的消息回调
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">EchoClientHandler&lt;/span>) &lt;span style="color:#a6e22e">ChannelRead&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>, &lt;span style="color:#a6e22e">msg&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span>{}) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">data&lt;/span>, &lt;span style="color:#a6e22e">ok&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">msg&lt;/span>.([]&lt;span style="color:#66d9ef">byte&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> !&lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">Warnf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;unknown msg type: %+v&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">msg&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">str&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> string(&lt;span style="color:#a6e22e">data&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">Infoln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;receive &amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">str&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 1秒后发送数据给服务器
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">AfterFunc&lt;/span>(&lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Second&lt;/span>, &lt;span style="color:#66d9ef">func&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">WriteAndFlush&lt;/span>(&lt;span style="color:#a6e22e">fmt&lt;/span>.&lt;span style="color:#a6e22e">Sprintf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;client say:%s\r\n&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">time&lt;/span>.&lt;span style="color:#a6e22e">Now&lt;/span>().&lt;span style="color:#a6e22e">String&lt;/span>())); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithError&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>).&lt;span style="color:#a6e22e">Warnln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;write error&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="maingo">main.go&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span> &lt;span style="color:#e6db74">&amp;#34;github.com/sirupsen/logrus&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;halia/bootstrap&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;halia/channel&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;halia/handler/codec&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;os&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">init&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">SetOutput&lt;/span>(&lt;span style="color:#a6e22e">os&lt;/span>.&lt;span style="color:#a6e22e">Stdout&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">SetLevel&lt;/span>(&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">DebugLevel&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">client&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">bootstrap&lt;/span>.&lt;span style="color:#a6e22e">NewClient&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">bootstrap&lt;/span>.&lt;span style="color:#a6e22e">ClientOptions&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 将原始net.Conn包装为Channel实现，一般情况下用DefaultChannel即可
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">ChannelFactory&lt;/span>: &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">conn&lt;/span> &lt;span style="color:#a6e22e">net&lt;/span>.&lt;span style="color:#a6e22e">Conn&lt;/span>) &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">NewDefaultChannel&lt;/span>(&lt;span style="color:#a6e22e">conn&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 添加解码器，换行符分割报文解码器
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">AddInbound&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;decoder&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">codec&lt;/span>.&lt;span style="color:#a6e22e">NewLineBasedFrameDecoder&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 添加业务处理器
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">AddInbound&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;handler&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">NewEchoClientHandler&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 添加编码器
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">AddOutbound&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;encoder&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">StringToByteEncoder&lt;/span>{})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 连接服务器
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;component&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;client&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">client&lt;/span>.&lt;span style="color:#a6e22e">Dial&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;tcp&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;127.0.0.1:8080&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="服务端代码">服务端代码&lt;/h3>
&lt;h4 id="handlergo-1">handler.go&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span> &lt;span style="color:#e6db74">&amp;#34;github.com/sirupsen/logrus&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;halia/channel&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;strings&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">EchoServerHandler&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Entry&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">NewEchoServerHandler&lt;/span>() &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">EchoServerHandler&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">EchoServerHandler&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>: &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;component&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;EchoServerHandler&amp;#34;&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">EchoServerHandler&lt;/span>) &lt;span style="color:#a6e22e">OnError&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">Warnln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;error caught&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">err&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">EchoServerHandler&lt;/span>) &lt;span style="color:#a6e22e">ChannelActive&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">Infoln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;connected&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Infof&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;pipeline in: %v&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">strings&lt;/span>.&lt;span style="color:#a6e22e">Join&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">InboundNames&lt;/span>(), &lt;span style="color:#e6db74">&amp;#34;-&amp;gt;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Infof&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;pipeline out: %v&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">strings&lt;/span>.&lt;span style="color:#a6e22e">Join&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">OutboundNames&lt;/span>(), &lt;span style="color:#e6db74">&amp;#34;-&amp;gt;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">EchoServerHandler&lt;/span>) &lt;span style="color:#a6e22e">ChannelInActive&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">Infoln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;disconnected&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Infof&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;pipeline in: %v&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">strings&lt;/span>.&lt;span style="color:#a6e22e">Join&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">InboundNames&lt;/span>(), &lt;span style="color:#e6db74">&amp;#34;-&amp;gt;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">Infof&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;pipeline out: %v&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">strings&lt;/span>.&lt;span style="color:#a6e22e">Join&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">OutboundNames&lt;/span>(), &lt;span style="color:#e6db74">&amp;#34;-&amp;gt;&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> (&lt;span style="color:#a6e22e">p&lt;/span> &lt;span style="color:#f92672">*&lt;/span>&lt;span style="color:#a6e22e">EchoServerHandler&lt;/span>) &lt;span style="color:#a6e22e">ChannelRead&lt;/span>(&lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">HandlerContext&lt;/span>, &lt;span style="color:#a6e22e">msg&lt;/span> &lt;span style="color:#66d9ef">interface&lt;/span>{}) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">data&lt;/span>, &lt;span style="color:#a6e22e">ok&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">msg&lt;/span>.([]&lt;span style="color:#66d9ef">byte&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> !&lt;span style="color:#a6e22e">ok&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">Warnf&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;unknown msg type: %+v&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">msg&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">str&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> string(&lt;span style="color:#a6e22e">data&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">Infoln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;receive &amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">str&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Write&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;server:&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#a6e22e">str&lt;/span> &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;\r\n&amp;#34;&lt;/span>); &lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#66d9ef">nil&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">p&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;peer&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span>().&lt;span style="color:#a6e22e">RemoteAddr&lt;/span>()).&lt;span style="color:#a6e22e">WithError&lt;/span>(&lt;span style="color:#a6e22e">err&lt;/span>).&lt;span style="color:#a6e22e">Warnln&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;write error&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="maingo-1">main.go&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-go" data-lang="go">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">package&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span> &lt;span style="color:#e6db74">&amp;#34;github.com/sirupsen/logrus&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;halia/bootstrap&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;halia/channel&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;halia/handler/codec&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;os&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">init&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">SetOutput&lt;/span>(&lt;span style="color:#a6e22e">os&lt;/span>.&lt;span style="color:#a6e22e">Stdout&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">SetLevel&lt;/span>(&lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">DebugLevel&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">s&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">bootstrap&lt;/span>.&lt;span style="color:#a6e22e">NewServer&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">bootstrap&lt;/span>.&lt;span style="color:#a6e22e">ServerOptions&lt;/span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">ChannelFactory&lt;/span>: &lt;span style="color:#66d9ef">func&lt;/span>(&lt;span style="color:#a6e22e">conn&lt;/span> &lt;span style="color:#a6e22e">net&lt;/span>.&lt;span style="color:#a6e22e">Conn&lt;/span>) &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">Channel&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">channel&lt;/span>.&lt;span style="color:#a6e22e">NewDefaultChannel&lt;/span>(&lt;span style="color:#a6e22e">conn&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">AddInbound&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;decoder&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">codec&lt;/span>.&lt;span style="color:#a6e22e">NewLineBasedFrameDecoder&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">AddInbound&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;handler&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">NewEchoServerHandler&lt;/span>())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">c&lt;/span>.&lt;span style="color:#a6e22e">Pipeline&lt;/span>().&lt;span style="color:#a6e22e">AddOutbound&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;encoder&amp;#34;&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">StringToByteEncoder&lt;/span>{})
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">log&lt;/span>.&lt;span style="color:#a6e22e">WithField&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;component&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;server&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">Fatal&lt;/span>(&lt;span style="color:#a6e22e">s&lt;/span>.&lt;span style="color:#a6e22e">Listen&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;tcp&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;0.0.0.0:8080&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="运行">运行&lt;/h3>
&lt;p>先运行服务端，再运行客户端。&lt;/p>
&lt;p>服务端输出&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>time=&amp;#34;2021-01-12T11:30:13+08:00&amp;#34; level=info msg=started addr=&amp;#34;0.0.0.0:8080&amp;#34; component=server network=tcp pid=7584
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time=&amp;#34;2021-01-12T11:30:13+08:00&amp;#34; level=info msg=initialized component=channelId machineId=a0c5895a25a3 pid=7584
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time=&amp;#34;2021-01-12T11:30:18+08:00&amp;#34; level=info msg=connected component=EchoServerHandler peer=&amp;#34;127.0.0.1:57641&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time=&amp;#34;2021-01-12T11:30:18+08:00&amp;#34; level=info msg=&amp;#34;pipeline in: InHeadContext-&amp;gt;decoder-&amp;gt;handler&amp;#34; component=EchoServerHandler
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time=&amp;#34;2021-01-12T11:30:18+08:00&amp;#34; level=info msg=&amp;#34;pipeline out: OutHeadContext-&amp;gt;encoder-&amp;gt;OutTailContext&amp;#34; component=EchoServerHandler
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time=&amp;#34;2021-01-12T11:30:18+08:00&amp;#34; level=info msg=&amp;#34;receive Hello World&amp;#34; component=EchoServerHandler peer=&amp;#34;127.0.0.1:57641&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time=&amp;#34;2021-01-12T11:30:19+08:00&amp;#34; level=info msg=&amp;#34;receive client say:2021-01-12 11:30:19.5192868 +0800 CST m=+1.046443501&amp;#34; component=EchoServerHandler peer=&amp;#34;127.0.0.1:57641&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time=&amp;#34;2021-01-12T11:30:20+08:00&amp;#34; level=info msg=&amp;#34;receive client say:2021-01-12 11:30:20.5193884 +0800 CST m=+2.046545101&amp;#34; component=EchoServerHandler peer=&amp;#34;127.0.0.1:57641&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time=&amp;#34;2021-01-12T11:30:21+08:00&amp;#34; level=info msg=&amp;#34;receive client say:2021-01-12 11:30:21.5345887 +0800 CST m=+3.061745401&amp;#34; component=EchoServerHandler peer=&amp;#34;127.0.0.1:57641&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>time=&amp;#34;2021-01-12T11:30:22+08:00&amp;#34; level=info msg=&amp;#34;receive client say:2021-01-12 11:30:22.5459978 +0800 CST m=+4.073154501&amp;#34; component=EchoServerHandler peer=&amp;#34;127.0.0.1:57641&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>客户端输出&lt;/p>
&lt;pre tabindex="0">&lt;code>time=&amp;#34;2021-01-12T11:30:18+08:00&amp;#34; level=info msg=connected component=EchoClientHandler peer=&amp;#34;127.0.0.1:8080&amp;#34;
time=&amp;#34;2021-01-12T11:30:18+08:00&amp;#34; level=info msg=&amp;#34;pipeline in: InHeadContext-&amp;gt;decoder-&amp;gt;handler&amp;#34; component=EchoClientHandler
time=&amp;#34;2021-01-12T11:30:18+08:00&amp;#34; level=info msg=&amp;#34;pipeline out: OutHeadContext-&amp;gt;encoder-&amp;gt;OutTailContext&amp;#34; component=EchoClientHandler
time=&amp;#34;2021-01-12T11:30:18+08:00&amp;#34; level=info msg=&amp;#34;receive server:Hello World&amp;#34; component=EchoClientHandler peer=&amp;#34;127.0.0.1:8080&amp;#34;
time=&amp;#34;2021-01-12T11:30:18+08:00&amp;#34; level=info msg=initialized component=channelId machineId=a0c5895a25a3 pid=960
time=&amp;#34;2021-01-12T11:30:19+08:00&amp;#34; level=info msg=&amp;#34;receive server:client say:2021-01-12 11:30:19.5192868 +0800 CST m=+1.046443501&amp;#34; component=EchoClientHandler peer=&amp;#34;127.0.0.1:8080&amp;#34;
time=&amp;#34;2021-01-12T11:30:20+08:00&amp;#34; level=info msg=&amp;#34;receive server:client say:2021-01-12 11:30:20.5193884 +0800 CST m=+2.046545101&amp;#34; component=EchoClientHandler peer=&amp;#34;127.0.0.1:8080&amp;#34;
time=&amp;#34;2021-01-12T11:30:21+08:00&amp;#34; level=info msg=&amp;#34;receive server:client say:2021-01-12 11:30:21.5345887 +0800 CST m=+3.061745401&amp;#34; component=EchoClientHandler peer=&amp;#34;127.0.0.1:8080&amp;#34;
time=&amp;#34;2021-01-12T11:30:22+08:00&amp;#34; level=info msg=&amp;#34;receive server:client say:2021-01-12 11:30:22.5459978 +0800 CST m=+4.073154501&amp;#34; component=EchoClientHandler peer=&amp;#34;127.0.0.1:8080&amp;#34;
&lt;/code>&lt;/pre>&lt;h2 id="写在后面">写在后面&lt;/h2>
&lt;p>Halia期待您的贡献！&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://halia-group.github.io/halia/">文档地址&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/halia-group/halia">仓库地址&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://imgkr2.cn-bj.ufileos.com/ccd85d43-46ce-405b-8efb-6f22c0f9ec3f.png?UCloudPublicKey=TOKEN_8d8b72be-579a-4e83-bfd0-5f6ce1546f13&amp;amp;Signature=APhNQ04SOdsYvwRWMyj6hc%252BUu5s%253D&amp;amp;Expires=1610510873" alt="">&lt;/p></description></item></channel></rss>
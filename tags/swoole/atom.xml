<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>swoole on Lei Xia</title><link>https://www.ddhigh.com/tags/swoole/</link><description>Recent content in swoole on Lei Xia</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 19 May 2019 16:10:47 +0000</lastBuildDate><atom:link href="https://www.ddhigh.com/tags/swoole/atom.xml" rel="self" type="application/rss+xml"/><item><title>在Swoole环境下运行注入Yii2框架的thrift应用</title><link>https://www.ddhigh.com/2019/05/19/running-thrift-on-swoole-with-yii2/</link><pubDate>Sun, 19 May 2019 16:10:47 +0000</pubDate><guid>https://www.ddhigh.com/2019/05/19/running-thrift-on-swoole-with-yii2/</guid><description>&lt;p>前两天发布了&lt;a href="https://www.ddhigh.com/2019/05/16/running-thrift-on-swoole.html">使用swoole来运行thrift应用&lt;/a>，项目虽然可以运行起来，但是周边的生态（如缓存，ORM，日志等等）并没有跟上，实际上开发体验比较差。周末研究了一下，把Yii2框架集成到了thrift应用上。&lt;/p>
&lt;p>项目地址：&lt;a href="https://github.com/swoole-foundation/yii2-swoole-thrift">https://github.com/swoole-foundation/yii2-swoole-thrift&lt;/a>&lt;/p>
&lt;p>Yii2优势：&lt;/p>
&lt;ul>
&lt;li>完美的OOP设计&lt;/li>
&lt;li>大量开箱即用的组件(DB/Cache/Logger/RBAC等等)&lt;/li>
&lt;li>组件化开发&lt;/li>
&lt;li>扩展性&lt;/li>
&lt;/ul>
&lt;p>这些支持是提高thrift应用开发效率的保证，毕竟没有人会直接在生产环境下手写SQL不是?&lt;/p></description></item><item><title>在swoole上运行Yii2应用</title><link>https://www.ddhigh.com/2019/05/19/running-yii2-on-swoole/</link><pubDate>Sun, 19 May 2019 16:02:07 +0000</pubDate><guid>https://www.ddhigh.com/2019/05/19/running-yii2-on-swoole/</guid><description>&lt;p>&lt;a href="https://www.yiiframework.com">Yii2&lt;/a>：业界著名的开发框架，完美的OOP设计以及组件化开发思想保证了框架的扩展性。
&lt;a href="https://www.swoole.com/">Swoole&lt;/a>：面向生产环境的 PHP 异步网络通信引擎。使 PHP 开发人员可以编写高性能的异步并发 TCP、UDP、Unix Socket、HTTP，WebSocket 服务。&lt;/p>
&lt;h2 id="yii2优点">Yii2优点&lt;/h2>
&lt;ul>
&lt;li>完美的OOP设计&lt;/li>
&lt;li>大量开箱即用的组件(DB/Cache/Logger/RBAC等等)&lt;/li>
&lt;li>组件化开发&lt;/li>
&lt;li>扩展性&lt;/li>
&lt;/ul>
&lt;h2 id="swoole优点">Swoole优点&lt;/h2>
&lt;ul>
&lt;li>高性能/异步/事件驱动&lt;/li>
&lt;li>使用PHP语言开发&lt;/li>
&lt;li>单文件容器化(传统的php-fpm容器化有点麻烦，一般使用apache的镜像，但是性能不行)&lt;/li>
&lt;/ul>
&lt;p>如果这两者结合将会擦出什么样的火花呢?&lt;/p>
&lt;h2 id="yii2-swoole-extension">Yii2-Swoole-Extension&lt;/h2>
&lt;p>&lt;a href="https://github.com/swoole-foundation/yii2-swoole-extension">Yii2-Swoole-Extension&lt;/a>&lt;/p>
&lt;p>基于swoole运行环境的Yii2扩展，基于标准Yii2组件化思想开发，对应用无侵入性，可以随时从 PHP-FPM &amp;lt;-&amp;gt; swoole 互相迁移。&lt;/p>
&lt;p>通过简单的几行代码即可完成传统PHP-FPM应用到Swoole的升级，给应用带来实打实的性能提升!&lt;/p></description></item><item><title>使用swoole来运行thrift应用</title><link>https://www.ddhigh.com/2019/05/16/running-thrift-on-swoole/</link><pubDate>Thu, 16 May 2019 14:32:41 +0000</pubDate><guid>https://www.ddhigh.com/2019/05/16/running-thrift-on-swoole/</guid><description>&lt;h2 id="swoole扩展简介">Swoole扩展简介&lt;/h2>
&lt;blockquote>
&lt;p>&lt;strong>Swoole：面向生产环境的 PHP 异步网络通信引擎&lt;/strong>&lt;/p>
&lt;p>使 PHP 开发人员可以编写高性能的异步并发 TCP、UDP、Unix Socket、HTTP，WebSocket 服务。Swoole 可以广泛应用于互联网、移动通信、企业软件、云计算、网络游戏、物联网（IOT）、车联网、智能家居等领域。 使用 PHP + Swoole 作为网络通信框架，可以使企业 IT 研发团队的效率大大提升，更加专注于开发创新产品。&lt;/p>
&lt;/blockquote>
&lt;h2 id="thrift">thrift&lt;/h2>
&lt;blockquote>
&lt;p>Thrift是一种接口描述语言和二进制通讯协议，它被用来定义和创建跨语言的服务。它被当作一个远程过程调用（RPC）框架来使用，是由Facebook为“大规模跨语言服务开发”而开发的。&lt;/p>
&lt;/blockquote>
&lt;h2 id="swoole实现">swoole实现&lt;/h2>
&lt;p>thrift官方提供的PHP服务端是运行在php原生阻塞IO模式的，性能比较差。笔者使用Swoole的异步服务端+thrift提供的接口实现一个了异步协程化的thrift应用。&lt;/p>
&lt;p>此项目已经在github上开源：&lt;/p>
&lt;p>&lt;a href="https://github.com/xialeistudio/swoole-thrift.git">https://github.com/xialeistudio/swoole-thrift.git&lt;/a>&lt;/p></description></item></channel></rss>